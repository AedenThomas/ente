// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:photos/src/rust/frb_generated.dart';

// These functions are ignored because they are not marked as `pub`: `ensure_capacity`, `save_index`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<VectorDB>>
abstract class VectorDb implements RustOpaqueInterface {
  Future<void> addVector({required BigInt key, required List<double> vector});

  Future<void> bulkAddVectors({
    required Uint64List keys,
    required List<Float32List> vectors,
  });

  Future<void> deleteIndex();

  Future<(BigInt, BigInt, BigInt, BigInt, BigInt)> getIndexStats();

  Future<Float32List> getVector({required BigInt key});

  factory VectorDb({required String filePath, required BigInt dimensions}) =>
      RustLib.instance.api.crateApiUsearchApiVectorDbNew(
        filePath: filePath,
        dimensions: dimensions,
      );

  Future<BigInt> removeVector({required BigInt key});

  Future<void> resetIndex();

  Future<(Uint64List, Float32List)> searchVectors({
    required List<double> query,
    required BigInt count,
  });
}
